anaconda 
پکیج های مناسب data scientist که ابزارهای پایتون را هم مثل notebook و ipython و خیلی چیزهای دیگه را شامل میشه


ipython 
pip install ipython
تقویت شده ی مکان زدن دستورات python 

notebook
pip install notebook


کار باهاش :
ipython notebook

shif+enter 
ران کردن هر بلوک و رفتن به بلوک بعد
ctrl+enter
ران کردن هر بلوک و ماندن در همان بلوک

برای این که از یک خط اینتر بزنی ادامش را پایین بنویسی اخر خط قبلی یه \ بزار

تابع zfill(NUM) که برای string هاست ، هر چیزی که بهش بدی را تا NUM رقم با 0 پرش میکنه ، البته صفر ها را از چپ اضافه میکنه ، مثلا '432' را بدی بهت '00432' میده.

برنامه نویسی compatitive مثل اینا که تو acm و اینا هست.
یکی هم برنامه نویسی کاربردی 


چند مفهوم
کتابخانه ها : باعث میشن شما برنامه هایی که ملت زدن را وردارین بیارین تو برنامه ی خودتون

اما api ها : رابطه برنامه ها با هم هستن ، اجازه ی صحبت کردن برنامه ها با همدیگه را میدن. پس فرقو اگه دقت کنی ، اونجا میری برنامه یارو را میاری ، ولی اینجا با برنامه یارو صبحت میکنی و سرویسی که میخوای را ازش دریافت میکنی ، این خیلی در کوچک شدن برنامه ی تو کمک میکنه
این سرویس که گفتم ، حالا ممکنه یک خدمت باشه مثلا جمع زدن ، یا حتی ممکنه دسترسی به یک بانک اطلاعاتی باشه که یارو جمع کرده و برنامه ای را فراهم کرده که تو بتونی باهاش تعامل کنی
در واقع شما اینطوری میتونی از یه عالمه دیتایی که جاهای دیگه هستن هم استفاده کنی ، کافیه اون کسی که اومده اون دیتای مورد نظر تو را یه جا جمع کرده ، فضایی(برنامه ای) فراهم کرده باشه که تو بتونی با برنامه ی اون صحبت کنی ، بدون اینکه لازم باشه دیتا یا برنامه ی یارو را بیاری برای خودت ، کافیه فقط با برنامه اش بدونی که چطوری صحبت کنی (در واقع با چه پروتکل و قالبی باید باهاش صحبت کنی) تا دیتایی که میخوای را بهت بده .

در واقع تو میشی یک برنامه ای که میتونه بیاد و از اون سرویس و یا بانک اطلاعاتی به کمک api هایی که در سطح اینترنت فراهم شده استفاده کنی

حتی میتونی خودت دیتا هم پاس بدی ، حالا این دیتا پاس دادن یا برای گرفتن یک سرویس دقیق تر هست ، یا مثلا ذخیره کردن چیزی در اون دیتابیس.
فرضا دیتابیسی را در نظر بگیرین که اشتراکی خریدینش و به جای اینکه خودتون درگیر سختی های کار با دیتابیس ها بشین ، اون فروشنده ی اشتراک دیتابیس برای شما API هایی فراهم کرده که شما میتونید توی اون فضای ابری که در اختیارتون قرار داده ، دیتا بنویسید یا دیتا بخونید. که برای نوشتن یا خواندن شما میاین از این API ها استفاده میکنید و دیگه لازم نیست درگیر مشکلات دیتابیس خودتون بشین ، مثل نگهداریش ، بالا بودنش ، امنیتش و هزاران چیز دیگه



اما REPresentational State Transfer (REST) ​​، احتمالاً محبوب ترین سبک معماری API ها برای خدمات وب است
اما URL نقطه پایانی به منبع خاصی در API متصل است.


